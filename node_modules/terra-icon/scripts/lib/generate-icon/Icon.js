"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _lodash = _interopRequireDefault(require("lodash"));

var _transformChildren = _interopRequireDefault(require("./transformChildren"));

var _htmlToReactAttributes = _interopRequireDefault(require("./htmlToReactAttributes"));

var _classNamesToAttributes = _interopRequireDefault(require("./classNamesToAttributes"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Icon = function Icon(name, node) {
  _classCallCheck(this, Icon);

  this.name = "Icon".concat(_lodash.default.upperFirst(_lodash.default.camelCase(name)));
  this.children = (0, _transformChildren.default)(node);
  this.attributes = (0, _classNamesToAttributes.default)(Array.prototype.slice.call(node.attributes).map(function (x) {
    return {
      name: (0, _htmlToReactAttributes.default)(x.name),
      value: x.value
    };
  }).reduce(function (attrs, x) {
    return _extends(_defineProperty({}, x.name, x.value), attrs);
  }, {}));
};

var _default = Icon;
exports.default = _default;
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _fs = _interopRequireDefault(require("fs"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable */
var outputfile = _fs.default.createWriteStream('../../packages/terra-icon/src/terra-dev-site/doc/example/IconThemeable.jsx', {
  flags: 'w'
});

var generateIconAll = function generateIconAll(iconObjs) {
  return new Promise(function (resolve) {
    var themeableIcons = iconObjs.filter(function (iconObj) {
      if (iconObj.themeable && !iconObj.deprecated) {
        return iconObj;
      }
    });
    outputfile.write('// This file is autogenerated from scripts/src/generate-example\n');
    outputfile.write('/* eslint-disable */\n');
    outputfile.write('import React from \'react\';\n');
    themeableIcons.forEach(function (iconObj) {
      outputfile.write(iconObj.syntaxImport);
    });
    outputfile.write('const cellStyle = { padding: \'0.5rem\' };\n');
    outputfile.write('const IconAll = () => (\n');
    outputfile.write('  <div>');
    outputfile.write('  <table>\n');
    outputfile.write('    <thead>\n');
    outputfile.write('    <tr>\n');
    outputfile.write("      <th style={cellStyle} key={'svg'}>SVG</th>\n");
    outputfile.write("      <th style={cellStyle} key={'concept'}>Concept</th>\n");
    outputfile.write("      <th style={cellStyle} key={'code'}>Code</th>\n");
    outputfile.write('    </tr>\n');
    outputfile.write('    </thead>\n');
    outputfile.write('    <tbody>\n');
    themeableIcons.forEach(function (iconObj) {
      outputfile.write("      <tr style={{ backgroundColor: '#EEEEEE' }}>\n");
      outputfile.write("        <td style={cellStyle}>".concat(iconObj.syntaxComponent, "</td>\n"));
      outputfile.write("        <td style={cellStyle}>".concat(iconObj.name, "</td>\n"));
      outputfile.write("        <td style={{ fontWeight: 'bold', padding: '0.5rem' }}>\n");
      outputfile.write('          <code>\n');
      outputfile.write("            ".concat(iconObj.syntaxImport));
      outputfile.write('          </code>\n');
      outputfile.write('        </td>\n');
      outputfile.write('      </tr>\n');
    });
    outputfile.write('    </tbody>\n');
    outputfile.write('  </table>\n');
    outputfile.write('  </div>');
    outputfile.write(');\n\n');
    outputfile.write('export default IconAll;\n');
    resolve(iconObjs);
  });
};

var _default = generateIconAll;
exports.default = _default;
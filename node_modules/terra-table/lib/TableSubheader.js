"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _bind = _interopRequireDefault(require("classnames/bind"));

var _TableModule = _interopRequireDefault(require("./Table.module.scss"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var cx = _bind.default.bind(_TableModule.default);

var propTypes = {
  /**
   * Content to be displayed in the subheader row
   */
  content: _propTypes.default.node.isRequired,

  /**
   * Number of columns the subheader must span
   */
  colSpan: _propTypes.default.number
};

var TableSubheader = function TableSubheader(_ref) {
  var content = _ref.content,
      colSpan = _ref.colSpan,
      customProps = _objectWithoutProperties(_ref, ["content", "colSpan"]);

  return (// count is based on the number of columns and assigned in the table component which contains this subheader
    _react.default.createElement("tr", {
      "data-terra-table-subheader-row": true
    }, _react.default.createElement("td", _extends({}, customProps, {
      className: cx('subheader', customProps.className),
      colSpan: colSpan
    }), content))
  );
};

TableSubheader.propTypes = propTypes;
var _default = TableSubheader;
exports.default = _default;
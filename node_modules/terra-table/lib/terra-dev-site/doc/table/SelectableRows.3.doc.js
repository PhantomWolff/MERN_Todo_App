"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _terraDocTemplate = _interopRequireDefault(require("terra-doc-template"));

var _ManagedSelectableTable = _interopRequireDefault(require("../../../../docs/ManagedSelectableTable.md"));

var _package = require("../../../../package.json");

var _SelectableTableRows = _interopRequireDefault(require("!terra-props-table-loader!../../../../src/SelectableTableRows"));

var _SelectableTableRows2 = _interopRequireDefault(require("!raw-loader!../../../../src/SelectableTableRows"));

var _SingleRowSelectableTable = _interopRequireDefault(require("../example/SingleRowSelectableTable"));

var _SingleRowSelectableTable2 = _interopRequireDefault(require("!raw-loader!../../../../src/terra-dev-site/doc/example/SingleRowSelectableTable"));

var _SelectableRowsDisableUnselectedRows = _interopRequireDefault(require("../example/SelectableRowsDisableUnselectedRows"));

var _SelectableRowsDisableUnselectedRows2 = _interopRequireDefault(require("!raw-loader!../../../../src/terra-dev-site/doc/example/SelectableRowsDisableUnselectedRows"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DocPage = function DocPage() {
  return _react.default.createElement(_terraDocTemplate.default, {
    packageName: _package.name,
    packageVersion: _package.version,
    readme: _ManagedSelectableTable.default,
    srcPath: "https://github.com/cerner/terra-core/tree/master/packages/".concat(_package.name),
    examples: [{
      title: 'Selectable Table',
      description: 'Note: Recording what item(s) are selected is an implementation detail of the consumer. This example shows a single-selectable table implementation.',
      example: _react.default.createElement(_SingleRowSelectableTable.default, null),
      source: _SingleRowSelectableTable2.default
    }, {
      title: 'Selectable Rows (Unselected rows are disabled)',
      description: 'A listener has been added for trying to change the selection state of a row, but only enabled rows can have their selection state changed.',
      example: _react.default.createElement(_SelectableRowsDisableUnselectedRows.default, null),
      source: _SelectableRowsDisableUnselectedRows2.default
    }],
    propsTables: [{
      componentName: 'Selectable Table Rows',
      componentSrc: _SelectableTableRows2.default,
      componentProps: _SelectableTableRows.default
    }]
  });
};

var _default = DocPage;
exports.default = _default;